{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Cloud_Computing\\\\term-assignment\\\\frontend\\\\src\\\\pages\\\\logs\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './Logs.module.css';\nimport { getDreamLogs } from '../../services/dreams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logs() {\n  _s();\n  const navigate = useNavigate();\n\n  // Sample state for logs. Replace with your data fetching logic if needed.\n  const [logs, setLogs] = useState([]);\n  const goToDreamEntry = () => {\n    navigate(\"/dreamentry\");\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const userId = sessionStorage.getItem('user_id');\n      console.log(userId);\n      const Dreamlogs = await getDreamLogs(userId);\n      console.log(Dreamlogs);\n      if (Dreamlogs && Dreamlogs.dreams) {\n        setLogs(Dreamlogs.dreams);\n      } else {\n        setLogs([]);\n      }\n    };\n    fetchEvents();\n  }, []);\n  const handleRowClick = logId => {\n    // If you want to pass the specific log's ID to the dream page, you can do so\n    navigate(`/dream/${logId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logsBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Dream Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), logs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.logsTable,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleRowClick(log.id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.noLogsMsg,\n        children: \"No logs found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.entryButton,\n        onClick: goToDreamEntry,\n        children: \"Enter New Dream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Logs, \"xef2CZJyzcShP3OArSJyne0UBLA=\", false, function () {\n  return [useNavigate];\n});\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","classes","getDreamLogs","jsxDEV","_jsxDEV","Logs","_s","navigate","logs","setLogs","goToDreamEntry","fetchEvents","userId","sessionStorage","getItem","console","log","Dreamlogs","dreams","handleRowClick","logId","className","container","children","logsBox","title","fileName","_jsxFileName","lineNumber","columnNumber","length","logsTable","map","index","onClick","id","date","tag","noLogsMsg","entryButton","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Cloud_Computing/term-assignment/frontend/src/pages/logs/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classes from './Logs.module.css';\r\nimport { getDreamLogs } from '../../services/dreams';\r\n\r\nfunction Logs() {\r\n    const navigate = useNavigate();\r\n    \r\n    // Sample state for logs. Replace with your data fetching logic if needed.\r\n    const [logs, setLogs] = useState([]); \r\n\r\n    const goToDreamEntry = () => {\r\n        navigate(\"/dreamentry\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n          const userId = sessionStorage.getItem('user_id');\r\n          console.log(userId);\r\n          const Dreamlogs = await getDreamLogs(userId);\r\n          console.log(Dreamlogs);\r\n          if (Dreamlogs && Dreamlogs.dreams) {\r\n            setLogs(Dreamlogs.dreams);\r\n        } else {\r\n            setLogs([]);\r\n        }\r\n        }\r\n    \r\n        fetchEvents();\r\n      }, []);\r\n\r\n    const handleRowClick = (logId) => {\r\n        // If you want to pass the specific log's ID to the dream page, you can do so\r\n        navigate(`/dream/${logId}`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n        <div className={classes.logsBox}>\r\n            <h2 className={classes.title}>Dream Logs</h2>\r\n\r\n            {logs.length > 0 ? (\r\n                <table className={classes.logsTable}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Sr</th>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                            <th>Tag</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {logs.map((log, index) => (\r\n                            <tr key={index} onClick={() => handleRowClick(log.id)}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{log.title}</td>\r\n                                <td>{log.date}</td>\r\n                                <td>{log.tag}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p className={classes.noLogsMsg}>No logs found.</p>\r\n            )}\r\n\r\n                <button className={classes.entryButton} onClick={goToDreamEntry}>Enter New Dream</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}