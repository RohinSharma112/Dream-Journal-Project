{"ast":null,"code":"import { url } from \"../Constant\";\nexport const appUserLogin = async userLogin => {\n  try {\n    const response = await fetch(`${url}/user/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\n      },\n      body: JSON.stringify({\n        username: userLogin.username,\n        password: userLogin.password\n      })\n    });\n    const data = await response.json();\n    return {\n      success: data.success,\n      message: data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Error connecting to Server.'\n    };\n  }\n};\nexport const appUserSignup = async userSignup => {\n  try {\n    const response = await fetch(`${url}/user/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: userSignup.name,\n        username: userSignup.username,\n        email: userSignup.email,\n        password: userSignup.password\n      })\n    });\n    const data = await response.json();\n    return {\n      success: data.success,\n      message: data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Error connecting to Server.'\n    };\n  }\n};\nexport const appDreamEntry = async dreamData => {\n  try {\n    const response = await fetch(`${url}/dreams/create-dream-entry`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: dreamData.user_id,\n        dream_title: dreamData.dream_title,\n        dream_date: dreamData.dream_date,\n        dream_description: dreamData.dream_description,\n        dream_tag: dreamData.dream_tag\n      })\n    });\n    const data = await response.json();\n    return {\n      success: data.success,\n      message: data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Error connecting to Server.'\n    };\n  }\n};","map":{"version":3,"names":["url","appUserLogin","userLogin","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","success","message","error","appUserSignup","userSignup","name","email","appDreamEntry","dreamData","user_id","dream_title","dream_date","dream_description","dream_tag"],"sources":["C:/Users/sharm/OneDrive/Desktop/Cloud_Computing/term-assignment/frontend/src/services/dreams.js"],"sourcesContent":["import {url} from \"../Constant\";\r\n\r\nexport const appUserLogin = async (userLogin) => {\r\n    try {\r\n        const response = await fetch(`${url}/user/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*', \r\n                'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\r\n            },\r\n            body: JSON.stringify({\r\n                username: userLogin.username,\r\n                password: userLogin.password\r\n            })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: data.success,\r\n            message: data.message\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            message: 'Error connecting to Server.'\r\n        };\r\n    }\r\n}\r\n\r\nexport const appUserSignup = async (userSignup) => {\r\n    try {\r\n        const response = await fetch(`${url}/user/signup`, { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: userSignup.name,           \r\n                username: userSignup.username,\r\n                email: userSignup.email,       \r\n                password: userSignup.password\r\n            })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: data.success,\r\n            message: data.message\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            message: 'Error connecting to Server.'\r\n        };\r\n    }\r\n}\r\n\r\n\r\nexport const appDreamEntry = async (dreamData) => {\r\n    try {\r\n        const response = await fetch(`${url}/dreams/create-dream-entry`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user_id: dreamData.user_id,          \r\n                dream_title: dreamData.dream_title,\r\n                dream_date: dreamData.dream_date,\r\n                dream_description: dreamData.dream_description,\r\n                dream_tag: dreamData.dream_tag\r\n            })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: data.success,\r\n            message: data.message\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            message: 'Error connecting to Server.'\r\n        };\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,SAAQA,GAAG,QAAO,aAAa;AAE/B,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC7C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,aAAY,EAAE;MAC9CK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE,oBAAoB;QACpD,8BAA8B,EAAE;MACpC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAER,SAAS,CAACQ,QAAQ;QAC5BC,QAAQ,EAAET,SAAS,CAACS;MACxB,CAAC;IACL,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAO;MACHC,OAAO,EAAEF,IAAI,CAACE,OAAO;MACrBC,OAAO,EAAEH,IAAI,CAACG;IAClB,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO;MACHF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACb,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,cAAa,EAAE;MAC/CK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBU,IAAI,EAAED,UAAU,CAACC,IAAI;QACrBT,QAAQ,EAAEQ,UAAU,CAACR,QAAQ;QAC7BU,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBT,QAAQ,EAAEO,UAAU,CAACP;MACzB,CAAC;IACL,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAO;MACHC,OAAO,EAAEF,IAAI,CAACE,OAAO;MACrBC,OAAO,EAAEH,IAAI,CAACG;IAClB,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO;MACHF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACb,CAAC;EACL;AACJ,CAAC;AAGD,OAAO,MAAMM,aAAa,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACA,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,4BAA2B,EAAE;MAC7DK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBc,OAAO,EAAED,SAAS,CAACC,OAAO;QAC1BC,WAAW,EAAEF,SAAS,CAACE,WAAW;QAClCC,UAAU,EAAEH,SAAS,CAACG,UAAU;QAChCC,iBAAiB,EAAEJ,SAAS,CAACI,iBAAiB;QAC9CC,SAAS,EAAEL,SAAS,CAACK;MACzB,CAAC;IACL,CAAC,CAAC;IAEF,MAAMf,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAO;MACHC,OAAO,EAAEF,IAAI,CAACE,OAAO;MACrBC,OAAO,EAAEH,IAAI,CAACG;IAClB,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO;MACHF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACb,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}