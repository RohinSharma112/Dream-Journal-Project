{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Cloud_Computing\\\\term-assignment\\\\frontend\\\\src\\\\pages\\\\entry\\\\Entry.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './Entry.module.css';\nimport { createEntry } from '../../services/dreams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Entry() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [tag, setTag] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n\n    // Extract text from the image using OCR\n    // Placeholder: This needs a library/API to be implemented\n    const extractedText = await extractTextFromImage(file);\n    setDescription(prevDesc => prevDesc + extractedText);\n  };\n  const extractTextFromImage = async imageFile => {\n    // Use an OCR library/API to extract text\n    // Return the extracted text\n    return \"Placeholder extracted text.\";\n  };\n  const handleLoginBoxClick = () => {\n    if (successMessage) {\n      navigate(\"/dreamentry\", {\n        state: {\n          successMessage: null,\n          errorMessage: null\n        }\n      });\n    }\n  };\n  const handleEntry = async e => {\n    const user_id = sessionStorage.getItem('user_id');\n    const dreamData = {\n      user_id,\n      title,\n      date,\n      description,\n      tag\n    };\n    const result = await createEntry(dreamData);\n    if (result.success) {\n      setTitle('');\n      setDate('');\n      setDescription('');\n      setTag('');\n      setSuccessMessage(result.message);\n    } else {\n      setErrorMessage(result.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.entryBox,\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorMsg,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.successMessage,\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Dream Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Dream Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: classes.inputField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        className: classes.inputField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Dream Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: classes.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        className: classes.fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: tag,\n        onChange: e => setTag(e.target.value),\n        className: classes.dropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Nightmare\",\n          children: \"Nightmare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sweet Dream\",\n          children: \"Sweet Dream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Neutral\",\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submitButton,\n        onClick: handleEntry,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Entry, \"F7v/+gYrvto0V9H4DFs1c/FJEws=\");\n_c = Entry;\nexport default Entry;\nvar _c;\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"names":["React","useState","classes","createEntry","jsxDEV","_jsxDEV","Entry","_s","title","setTitle","date","setDate","description","setDescription","tag","setTag","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleImageUpload","event","file","target","files","extractedText","extractTextFromImage","prevDesc","imageFile","handleLoginBoxClick","navigate","state","handleEntry","e","user_id","sessionStorage","getItem","dreamData","result","success","message","className","container","children","entryBox","errorMsg","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","inputField","textarea","fileInput","dropdown","submitButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Cloud_Computing/term-assignment/frontend/src/pages/entry/Entry.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './Entry.module.css';\r\nimport { createEntry } from '../../services/dreams';\r\n\r\nfunction Entry() {\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [tag, setTag] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n    const handleImageUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        \r\n        // Extract text from the image using OCR\r\n        // Placeholder: This needs a library/API to be implemented\r\n        const extractedText = await extractTextFromImage(file);\r\n        \r\n        setDescription(prevDesc => prevDesc + extractedText);\r\n    };\r\n\r\n    const extractTextFromImage = async (imageFile) => {\r\n        // Use an OCR library/API to extract text\r\n        // Return the extracted text\r\n        return \"Placeholder extracted text.\";\r\n    };\r\n\r\n    const handleLoginBoxClick = () => {\r\n        if (successMessage) {\r\n            navigate(\"/dreamentry\", { state: { successMessage: null , errorMessage:null} });\r\n        }\r\n    };\r\n\r\n    const handleEntry = async (e) => {\r\n\r\n        const user_id = sessionStorage.getItem('user_id');\r\n        const dreamData = {\r\n            user_id,\r\n            title,\r\n            date,\r\n            description,\r\n            tag\r\n        };\r\n\r\n        const result = await createEntry(dreamData);\r\n\r\n        if (result.success) {\r\n            setTitle('');\r\n            setDate('');\r\n            setDescription('');\r\n            setTag('');\r\n            setSuccessMessage(result.message);\r\n        } else {\r\n            setErrorMessage(result.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.entryBox}>\r\n                {errorMessage && <p className={classes.errorMsg}>{errorMessage}</p>}\r\n                {successMessage && (<p className={classes.successMessage}>{successMessage}</p>)}\r\n                <h2 className={classes.title}>Dream Entry</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Dream Title\" \r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    className={classes.inputField}\r\n                />\r\n                <input \r\n                    type=\"date\" \r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                    className={classes.inputField}\r\n                />\r\n                <textarea \r\n                    placeholder=\"Dream Description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    className={classes.textarea}\r\n                />\r\n                <input \r\n                    type=\"file\" \r\n                    onChange={handleImageUpload}\r\n                    className={classes.fileInput}\r\n                />\r\n                <select \r\n                    value={tag}\r\n                    onChange={(e) => setTag(e.target.value)}\r\n                    className={classes.dropdown}\r\n                >\r\n                    <option value=\"Nightmare\">Nightmare</option>\r\n                    <option value=\"Sweet Dream\">Sweet Dream</option>\r\n                    <option value=\"Neutral\">Neutral</option>\r\n                </select>\r\n                \r\n                <button className={classes.submitButton} onClick={handleEntry}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Entry;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}