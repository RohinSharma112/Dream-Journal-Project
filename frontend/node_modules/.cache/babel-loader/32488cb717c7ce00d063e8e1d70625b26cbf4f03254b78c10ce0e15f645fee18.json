{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Cloud_Computing\\\\term-assignment\\\\frontend\\\\src\\\\pages\\\\logs\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './Logs.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logs() {\n  _s();\n  const navigate = useNavigate();\n\n  // Sample state for logs. Replace with your data fetching logic if needed.\n  const [logs, setLogs] = useState([]);\n  const goToDreamEntry = () => {\n    navigate(\"/dreamentry\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logsBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Dream Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), logs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.logsTable,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.noLogsMsg,\n        children: \"No logs found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.entryButton,\n        onClick: goToDreamEntry,\n        children: \"Enter New Dream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Logs, \"Uw0YSKWMJTtbNFxciVyKMVI3RCg=\", false, function () {\n  return [useNavigate];\n});\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useNavigate","classes","jsxDEV","_jsxDEV","Logs","_s","navigate","logs","setLogs","goToDreamEntry","className","container","children","logsBox","title","fileName","_jsxFileName","lineNumber","columnNumber","length","logsTable","map","log","index","date","tag","noLogsMsg","entryButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Cloud_Computing/term-assignment/frontend/src/pages/logs/Logs.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classes from './Logs.module.css';\r\n\r\nfunction Logs() {\r\n    const navigate = useNavigate();\r\n    \r\n    // Sample state for logs. Replace with your data fetching logic if needed.\r\n    const [logs, setLogs] = useState([]); \r\n\r\n    const goToDreamEntry = () => {\r\n        navigate(\"/dreamentry\");\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.logsBox}>\r\n                <h2 className={classes.title}>Dream Logs</h2>\r\n\r\n                {logs.length > 0 ? (\r\n                    <table className={classes.logsTable}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sr</th>\r\n                                <th>Title</th>\r\n                                <th>Date</th>\r\n                                <th>Tag</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {logs.map((log, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{log.title}</td>\r\n                                    <td>{log.date}</td>\r\n                                    <td>{log.tag}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p className={classes.noLogsMsg}>No logs found.</p>\r\n                )}\r\n\r\n                <button className={classes.entryButton} onClick={goToDreamEntry}>Enter New Dream</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}